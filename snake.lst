RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  1

QCW(0x00002F32)

DOS RC51 COMPILER V06.16.13.326, COMPILATION OF MODULE SNAKE     
OBJECT MODULE PLACED IN C:\Users\Gearlles\Documents\Ride\Snake\snake.obj
COMPILER INVOKED BY: QUIET GENERATEDEPFILE OJ(C:\Users\Gearlles\Documents\Ride\S
            -nake\snake.obj) PIN(C:\Raisonance\Ride\Inc;C:\Raisonance\Ride\Inc\5
            -1) PIN(C:\Raisonance\Ride\\inc\51) NOAM CD PR(C:\Users\Gearlles\Doc
            -uments\Ride\Snake\snake.lst) FP(NOFLOAT) IP NOIS UNSIGNEDCHAR ET(CH
            -AR) PR PL(60) PW(80) OE(1) OT(7,SPEED) RB(0) MAXERR(25) MAXWAR(25) 
            -SM MOD517(NODP8,NOAU) 

stmt level    source
   1          #include <reg51.h>
   2          
   3          #define SNAKE_MAX_SIZE 20
   4          #define SNAKE_SCREEN_WIDTH 84
   5          #define SNAKE_SCREEN_HEIGHT 48
   6          
   7          sbit left = P3 ^ 2;
   8          sbit right = P3 ^ 7;
   9          sbit up = P3 ^ 4;
  10          sbit down = P3 ^ 3;
  11          
  12          // array com as posições X da Snake
  13          unsigned char x[SNAKE_MAX_SIZE + 1];
  14          // array com as posições Y da Snake
  15          unsigned char y[SNAKE_MAX_SIZE + 1];
  16          // tamanho atual da Snake
  17          unsigned char n;
  18          // contador utilizado para iterar pela Snake
  19          unsigned char i;
  20          
  21          char addx, addy;
  22          
  23          int rand()
  24          {
  25   1          // TODO
  26   1          return 5;
  27   1      }
  28          
  29          void updateDirections()
  30          {
  31   1          if (left == 0)
  32   1          {
  33   2              addy = 0;
  34   2              if (addx != 1)
  35   2                  addx = -1;
  36   2              else
  37   2                  addx = 1;
  38   2          }
  39   1      
  40   1          if (right == 0)
  41   1          {
  42   2              addy = 0;
  43   2              if (addx != -1)
  44   2                  addx = 1;
  45   2              else
  46   2                  addx = -1;
  47   2          }
RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  2

  48   1      
  49   1          if (down == 0)
  50   1          {
  51   2              addx = 0;
  52   2              if (addy != -1)
  53   2                  addy = 1;
  54   2              else
  55   2                  addy = -1;
  56   2          }
  57   1      
  58   1          if (up == 0)
  59   1          {
  60   2              addx = 0;
  61   2              if (addy != 1)
  62   2                  addy = -1;
  63   2              else
  64   2                  addy = 1;
  65   2          }
  66   1      }
  67          
  68          int colision()
  69          {
  70   1          bit k;
  71   1          k = 0;
  72   1          // colisão com as paredes
  73   1          if (x[1] > SNAKE_SCREEN_WIDTH || y[1] > SNAKE_SCREEN_HEIGHT)
  74   1              k = 1;
  75   1          // colisão com o corpo
  76   1          for (i = 2; i < n; i++)
  77   1              if ((x[1] == x[i]) && (y[1] == y[i]))
  78   1                  k = 1;
  79   1          return k;
  80   1      }
  81          
  82          void mainn(void)
  83          {
  84   1          while (1)
  85   1          {
  86   2              for (i = 3; i < SNAKE_MAX_SIZE + 1; i++)
  87   2              {
  88   3                  x[i] = 100;
  89   3              }
  90   2              for (i = 3; i < SNAKE_MAX_SIZE + 1; i++)
  91   2              {
  92   3                  y[i] = 100; 
  93   3              }
  94   2          
  95   2              //  posição inicial da comida
  96   2              x[0] = rand(); 
  97   2              y[0] = rand();
  98   2          
  99   2              n = 2; // tamanho inicial da snake
 100   2              
 101   2              // posição inicial da cabeça
 102   2              x[1] = 1; y[1] = 2; 
 103   2              // posição inicial da calda
 104   2              x[2] = 1; y[2] = 1;
 105   2          
RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  5

 106   2              // sentido inicial
 107   2              addx = 0; addy = 1;
 108   2          
 109   2              while (1)
 110   2              {
 111   3                  updateDirections();
 112   3      
 113   3                  // checando colisão
 114   3                  if (colision())
 115   3                  {
 116   4                      // Fim de jogo!
 117   4                      break;
 118   4                  }
 119   3              
 120   3                  // checando se a posição atual da cabeça tem comida
 121   3                  if ((x[0] == x[1] + addx) && (y[0] == y[1] + addy))
 122   3                  {
 123   4                      n++;
 124   4                  
 125   4                      // se atingiu o limite da snake, reseta
 126   4                      if (n == SNAKE_MAX_SIZE)
 127   4                      {
 128   5                          break;
 129   5                      }
 130   4                  
 131   4                      // adiciona comida em outro lugar
 132   4                      x[0] = rand();
 133   4                      y[0] = rand();
 134   4                  }
 135   3              
 136   3                  for (i = n; i > 1; i--)
 137   3                  {
 138   4                      x[i] = x[i - 1];
 139   4                      y[i] = y[i - 1];
 140   4                  }
 141   3              
 142   3                  x[1] = x[2] + addx;
 143   3                  y[1] = y[2] + addy;
 144   3              }
 145   2          }
 146   1      }
RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  8

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION rand (BEGIN)
                                           ; SOURCE LINE # 26 
0000 E4             CLR    A
0001 FE             MOV    R6,A
0002 7F05           MOV    R7,#005H
                                           ; SOURCE LINE # 27 
0004 22             RET    

            ; FUNCTION rand (END)

            ; FUNCTION updateDirections (BEGIN)
                                           ; SOURCE LINE # 31 
0000 20B211         JB     left,?NXT8
                                           ; SOURCE LINE # 33 
0003 E4             CLR    A
0004 F500    R      MOV    addy,A
                                           ; SOURCE LINE # 34 
0006 E500    R      MOV    A,addx
0008 6401           XRL    A,#001H
000A 6005           JZ     ?ELSE9
                                           ; SOURCE LINE # 35 
000C 7500FF  R      MOV    addx,#0FFH
000F 8003           SJMP   ?NXT8
0011         ?ELSE9:
                                           ; SOURCE LINE # 37 
0011 750001  R      MOV    addx,#001H
0014         ?NXT8:
                                           ; SOURCE LINE # 40 
0014 20B713         JB     right,?NXT10
                                           ; SOURCE LINE # 42 
0017 E4             CLR    A
0018 F500    R      MOV    addy,A
                                           ; SOURCE LINE # 43 
001A B4FF05         CJNE   A,#0FFH,?LAB8
001D E500    R      MOV    A,addx
001F F4             CPL    A
0020 6005           JZ     ?ELSE11
0022         ?LAB8:
                                           ; SOURCE LINE # 44 
0022 750001  R      MOV    addx,#001H
0025 8003           SJMP   ?NXT10
0027         ?ELSE11:
                                           ; SOURCE LINE # 46 
0027 7500FF  R      MOV    addx,#0FFH
002A         ?NXT10:
                                           ; SOURCE LINE # 49 
002A 20B313         JB     down,?NXT12
                                           ; SOURCE LINE # 51 
002D E4             CLR    A
002E F500    R      MOV    addx,A
                                           ; SOURCE LINE # 52 
0030 B4FF05         CJNE   A,#0FFH,?LAB9
0033 E500    R      MOV    A,addy
0035 F4             CPL    A
0036 6005           JZ     ?ELSE13
0038         ?LAB9:
                                           ; SOURCE LINE # 53 
0038 750001  R      MOV    addy,#001H
RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  3

003B 8003           SJMP   ?NXT12
003D         ?ELSE13:
                                           ; SOURCE LINE # 55 
003D 7500FF  R      MOV    addy,#0FFH
0040         ?NXT12:
                                           ; SOURCE LINE # 58 
0040 20B410         JB     up,?NXT14
                                           ; SOURCE LINE # 60 
0043 E4             CLR    A
0044 F500    R      MOV    addx,A
                                           ; SOURCE LINE # 61 
0046 E500    R      MOV    A,addy
0048 6401           XRL    A,#001H
004A 6004           JZ     ?ELSE15
                                           ; SOURCE LINE # 62 
004C 7500FF  R      MOV    addy,#0FFH
004F 22             RET    
0050         ?ELSE15:
                                           ; SOURCE LINE # 64 
0050 750001  R      MOV    addy,#001H
0053         ?NXT14:
                                           ; SOURCE LINE # 66 
0053 22             RET    

            ; FUNCTION updateDirections (END)

            ; FUNCTION colision (BEGIN)
                                           ; SOURCE LINE # 71 
0000 C200    R      CLR    k
                                           ; SOURCE LINE # 73 
0002 E500    R      MOV    A,x+01H
0004 B45401         CJNE   A,#054H,?LAB22
0007 D3             SETB   C
0008         ?LAB22:
0008 5008           JNC    ?LAB21
000A E500    R      MOV    A,y+01H
000C B43001         CJNE   A,#030H,?LAB24
000F D3             SETB   C
0010         ?LAB24:
0010 4002           JC     ?NXT20
0012         ?LAB21:
                                           ; SOURCE LINE # 74 
0012 D200    R      SETB   k
0014         ?NXT20:
                                           ; SOURCE LINE # 76 
0014 750002  R      MOV    i,#002H
0017         ?FOR1:
0017 E500    R      MOV    A,i
0019 B50000  R      CJNE   A,n,?LAB26
001C         ?LAB26:
001C 501E           JNC    ?NXT21
                                           ; SOURCE LINE # 77 
001E E500    R      MOV    A,i
0020 2400    R      ADD    A,#x
0022 F8             MOV    R0,A
0023 86F0           MOV    B,@R0
0025 E500    R      MOV    A,x+01H
0027 B5F00E         CJNE   A,B,?NXT22
RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  4

002A E500    R      MOV    A,i
002C 2400    R      ADD    A,#y
002E F9             MOV    R1,A
002F 87F0           MOV    B,@R1
0031 E500    R      MOV    A,y+01H
0033 B5F002         CJNE   A,B,?NXT22
                                           ; SOURCE LINE # 78 
0036 D200    R      SETB   k
0038         ?NXT22:
                                           ; SOURCE LINE # 76 
0038 0500    R      INC    i
003A 80DB           SJMP   ?FOR1
003C         ?NXT21:
                                           ; SOURCE LINE # 79 
003C A200    R      MOV    C,k
003E E4             CLR    A
003F 33             RLC    A
0040 7E00           MOV    R6,#000H
0042 FF             MOV    R7,A
                                           ; SOURCE LINE # 80 
0043 22             RET    

            ; FUNCTION colision (END)

            ; FUNCTION mainn (BEGIN)
0000         ?WHILE2:
                                           ; SOURCE LINE # 86 
0000 750003  R      MOV    i,#003H
0003         ?FOR5:
0003 E500    R      MOV    A,i
0005 B41500         CJNE   A,#015H,?LAB38
0008         ?LAB38:
0008 500B           JNC    ?NXT36
                                           ; SOURCE LINE # 88 
000A E500    R      MOV    A,i
000C 2400    R      ADD    A,#x
000E F8             MOV    R0,A
000F 7664           MOV    @R0,#064H
                                           ; SOURCE LINE # 86 
0011 0500    R      INC    i
0013 80EE           SJMP   ?FOR5
0015         ?NXT36:
                                           ; SOURCE LINE # 90 
0015 750003  R      MOV    i,#003H
0018         ?FOR6:
0018 E500    R      MOV    A,i
001A B41500         CJNE   A,#015H,?LAB40
001D         ?LAB40:
001D 500B           JNC    ?NXT38
                                           ; SOURCE LINE # 92 
001F E500    R      MOV    A,i
0021 2400    R      ADD    A,#y
0023 F8             MOV    R0,A
0024 7664           MOV    @R0,#064H
                                           ; SOURCE LINE # 90 
0026 0500    R      INC    i
0028 80EE           SJMP   ?FOR6
002A         ?NXT38:
RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  6

                                           ; SOURCE LINE # 96 
002A 120000  R      LCALL  rand
002D 8F00    R      MOV    x,R7
                                           ; SOURCE LINE # 97 
002F 120000  R      LCALL  rand
0032 8F00    R      MOV    y,R7
                                           ; SOURCE LINE # 99 
0034 750002  R      MOV    n,#002H
                                           ; SOURCE LINE # 102 
0037 750001  R      MOV    x+01H,#001H
003A 750002  R      MOV    y+01H,#002H
                                           ; SOURCE LINE # 104 
003D 750001  R      MOV    x+02H,#001H
0040 750001  R      MOV    y+02H,#001H
                                           ; SOURCE LINE # 107 
0043 E4             CLR    A
0044 F500    R      MOV    addx,A
0046 750001  R      MOV    addy,#001H
0049         ?WHILE3:
                                           ; SOURCE LINE # 111 
0049 120000  R      LCALL  updateDirections
                                           ; SOURCE LINE # 114 
004C 120000  R      LCALL  colision
004F EE             MOV    A,R6
0050 4F             ORL    A,R7
0051 6002           JZ     ?NXT41
                                           ; SOURCE LINE # 117 
0053 80AB           SJMP   ?WHILE2
0055         ?NXT41:
                                           ; SOURCE LINE # 121 
0055 E500    R      MOV    A,addx
0057 2500    R      ADD    A,x+01H
0059 FD             MOV    R5,A
005A E4             CLR    A
005B 33             RLC    A
005C F5F0           MOV    B,A
005E E4             CLR    A
005F B5F03A         CJNE   A,B,?NXT42
0062 E500    R      MOV    A,x
0064 B50535         CJNE   A,AR5,?NXT42
0067 7E00           MOV    R6,#000H
0069 C006           PUSH   AR6
006B C000    R      PUSH   addy
006D D0E0           POP    ACC
006F 2500    R      ADD    A,y+01H
0071 FF             MOV    R7,A
0072 D0E0           POP    ACC
0074 3400           ADDC   A,#000H
0076 FE             MOV    R6,A
0077 C006           PUSH   AR6
0079 C007           PUSH   AR7
007B D005           POP    AR5
007D D0F0           POP    B
007F E4             CLR    A
0080 B5F019         CJNE   A,B,?NXT42
0083 E500    R      MOV    A,y
0085 B50514         CJNE   A,AR5,?NXT42
                                           ; SOURCE LINE # 123 
RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  7

0088 0500    R      INC    n
                                           ; SOURCE LINE # 126 
008A E500    R      MOV    A,n
008C B41403         CJNE   A,#014H,?NXT43
                                           ; SOURCE LINE # 128 
008F 020000  R      LJMP   ?WHILE2
0092         ?NXT43:
                                           ; SOURCE LINE # 132 
0092 120000  R      LCALL  rand
0095 8F00    R      MOV    x,R7
                                           ; SOURCE LINE # 133 
0097 120000  R      LCALL  rand
009A 8F00    R      MOV    y,R7
009C         ?NXT42:
                                           ; SOURCE LINE # 136 
009C 850000  R      MOV    i,n
009F         ?FOR7:
009F E500    R      MOV    A,i
00A1 B40101         CJNE   A,#001H,?LAB43
00A4 D3             SETB   C
00A5         ?LAB43:
00A5 401C           JC     ?NXT44
                                           ; SOURCE LINE # 138 
00A7 E500    R      MOV    A,i
00A9 2400    R      ADD    A,#x+0FFH
00AB F8             MOV    R0,A
00AC E500    R      MOV    A,i
00AE 2400    R      ADD    A,#x
00B0 F9             MOV    R1,A
00B1 E6             MOV    A,@R0
00B2 F7             MOV    @R1,A
                                           ; SOURCE LINE # 139 
00B3 E500    R      MOV    A,i
00B5 2400    R      ADD    A,#y+0FFH
00B7 F8             MOV    R0,A
00B8 E500    R      MOV    A,i
00BA 2400    R      ADD    A,#y
00BC F9             MOV    R1,A
00BD E6             MOV    A,@R0
00BE F7             MOV    @R1,A
                                           ; SOURCE LINE # 136 
00BF 1500    R      DEC    i
00C1 80DC           SJMP   ?FOR7
00C3         ?NXT44:
                                           ; SOURCE LINE # 142 
00C3 E500    R      MOV    A,addx
00C5 2500    R      ADD    A,x+02H
00C7 F500    R      MOV    x+01H,A
                                           ; SOURCE LINE # 143 
00C9 E500    R      MOV    A,addy
00CB 2500    R      ADD    A,y+02H
00CD F500    R      MOV    y+01H,A
00CF 020000  R      LJMP   ?WHILE3

            ; FUNCTION mainn (END)

RC51 COMPILER V06.16.13.326,  SNAKE              11/17/14  21:09:54  PAGE  9



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    367    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     46    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
